// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Leap$Leap = require("../src/Leap.bs.js");

Jest.describe("Leap", (function (param) {
        Jest.test("year not divisible by 4 in common year", (function (param) {
                return Jest.Expect.toBe(false, Jest.Expect.expect(Leap$Leap.isLeapYear(2015)));
              }));
        Jest.test("year divisible by 2, not divisible by 4 in common year", (function (param) {
                return Jest.Expect.toBe(false, Jest.Expect.expect(Leap$Leap.isLeapYear(1970)));
              }));
        Jest.test("year divisible by 4, not divisible by 100 in leap year", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Leap$Leap.isLeapYear(1996)));
              }));
        Jest.test("year divisible by 4 and 5 is still a leap year", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Leap$Leap.isLeapYear(1960)));
              }));
        Jest.test("year divisible by 100, not divisible by 400 in common year", (function (param) {
                return Jest.Expect.toBe(false, Jest.Expect.expect(Leap$Leap.isLeapYear(2100)));
              }));
        Jest.test("year divisible by 100 but not by 3 is still not a leap year", (function (param) {
                return Jest.Expect.toBe(false, Jest.Expect.expect(Leap$Leap.isLeapYear(1900)));
              }));
        Jest.test("year divisible by 400 in leap year", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Leap$Leap.isLeapYear(2000)));
              }));
        Jest.test("year divisible by 400 but not by 125 is still a leap year", (function (param) {
                return Jest.Expect.toBe(true, Jest.Expect.expect(Leap$Leap.isLeapYear(2400)));
              }));
        return Jest.test("year divisible by 200, not divisible by 400 in common year", (function (param) {
                      return Jest.Expect.toBe(false, Jest.Expect.expect(Leap$Leap.isLeapYear(1800)));
                    }));
      }));

/*  Not a pure module */
